name: Deploy API

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_call:
    inputs:
      env:
        description: 'Deployment environment - choose between dev and prod'
        required: true
        type: string
      bullmq_secret:
        description: 'Bullmq secret api token'
        required: false
        type: string

jobs:

  set_environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set_env.outputs.environment }}
    steps:
      - id: set_env
        run: |
          if echo "${{ inputs.env }}" | grep -qwi 'prod'; then
            echo "::set-output name=environment::Production"
          else
            echo "::set-output name=environment::Development"
          fi

  get_env_secret:
    needs: set_environment
    runs-on: ubuntu-latest
    environment: ${{ needs.set_environment.outputs.environment }}
    outputs:
      bullmq_token: ${{ steps.set_env.outputs.bullmq_token }}
    steps:
      - id: set_bullmq_token
        run: |
          echo "::set-output name=bullmq_token::${{ secrets.BULL_MQ_PRO_NPM_TOKEN }}"

  build_image:
    needs: get_env_secret
    uses: ./.github/workflows/cloud-deploy-reusable-docker.yml
    with:
      environment: ${{ needs.set_environment.outputs.environment }}
      package_name: novu/api
      project_path: apps/api
      test_port: 1341
      health_check: true
      local_tag: novu-api
      env_tag: ${{ inputs.env }}
      enterprise: true
      bullmq_secret: ${{ inputs.bullmq_secret }}
    secrets: inherit


  deploy_dev_api:
    needs:
      - build_image
      - set_environment
      - get_env_secret
    uses: ./.github/workflows/cloud-deploy-reusable-app-service-deploy.yml
    if: ${{ contains(inputs.env, 'dev') }}
    secrets: inherit
    with:
      environment: ${{ needs.set_environment.outputs.environment }}
      service_name: api
      terraform_workspace: novu-dev
      docker_image: ghcr.io/novuhq/novu/api-ee:${{ github.sha }}

  deploy_prod_api_eu:
    needs:
      - build_image
      - set_environment
      - get_env_secret
    uses: ./.github/workflows/cloud-deploy-reusable-app-service-deploy.yml
    if: ${{ !contains(inputs.env, 'dev') }}
    secrets: inherit
    with:
      environment: ${{ needs.set_environment.outputs.environment }}
      service_name: api
      terraform_workspace: novu-prod-eu
      docker_image: ghcr.io/novuhq/novu/api-ee:${{ github.sha }}

  deploy_prod_api_us:
    needs:
      - build_image
      - set_environment
      - get_env_secret
    uses: ./.github/workflows/cloud-deploy-reusable-app-service-deploy.yml
    if: ${{ !contains(inputs.env, 'dev') }}
    secrets: inherit
    with:
      environment: Production
      service_name: api
      terraform_workspace: novu-prod
      docker_image: ghcr.io/novuhq/novu/api-ee:${{ github.sha }}
      deploy_sentry_release: true
      sentry_project: api

