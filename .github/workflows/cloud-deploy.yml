name: Release App
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment (Staging, Production-EU, Production-US)'
        required: true
        default: 'Staging'
        type: choice
        options:
          - Staging
          - Production-EU
          - Production-US

jobs:
  pre-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

#      - name: Start Deployment Notification
#        uses: slackapi/slack-github-action@v1.26.0
#        with:
#          payload: |
#            {
#              "text": "*<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Release has started for ${{ steps.setenvname.outputs.envName }}.>*",
#              "blocks": [
#                {
#                  "type": "section",
#                  "text": {
#                    "type": "mrkdwn",
#                    "text": "*<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Release has started for ${{ steps.setenvname.outputs.envName }}.>*)"
#                  }
#                }
#              ]
#            }
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_ENG_FEED_DEPLOYMENTS }}

# Unique deploy process
  release-embed:
    uses: ./.github/workflows/cloud-deploy-embed.yml
    needs: [pre-release]
    secrets: inherit
    permissions:
      contents: read
      packages: write
      deployments: write
      id-token: write
    with:
      environment: ${{ inputs.environment }}

# Unique deploy process
  release-web:
    uses: ./.github/workflows/cloud-deploy-web.yml
    needs: [pre-release]
    secrets: inherit
    permissions:
      contents: read
      packages: write
      deployments: write
      id-token: write
    with:
      environment: ${{ inputs.environment }}

# Unique deploy process
  release-web-components:
    uses: ./.github/workflows/cloud-deploy-web-components.yml
    needs: [pre-release]
    secrets: inherit
    permissions:
      contents: read
      packages: write
      deployments: write
      id-token: write
    with:
      environment: ${{ inputs.environment }}

# Unique deploy process
  release-widget:
    uses: ./.github/workflows/cloud-deploy-widget.yml
    needs: [pre-release]
    secrets: inherit
    permissions:
      contents: read
      packages: write
      deployments: write
      id-token: write
    with:
      environment: ${{ inputs.environment }}

  release-services:
    needs: [ pre-release ]
    permissions:
      contents: read
      packages: write
      deployments: write
      id-token: write
    strategy:
      matrix:
        service:
          - name: 'api'
            test_port: '1341'
          - name: 'inbound-mail'
            test_port: '1342'
          - name: 'webhook'
            test_port: '1343'
          - name: 'worker'
            test_port: '1344'
          - name: 'ws'
            test_port: '1345'
    uses: ./.github/workflows/cloud-deploy-services.yml
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
      service: ${{ matrix.service.name }}
      package_name: novu/${{ matrix.service.name }}
      project_path: apps/${{ matrix.service.name }}
      test_port: ${{ matrix.service.test_port }}
      local_tag: novu-${{ matrix.service.name }}

#  post-release-failure:
#    if: ${{ always() && (contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')) }}
#    needs: [
#      release-services,
#      release-embed,
#      release-web,
#      release-widget,
#      release-web-components,
#    ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Deploy API Documentation
#        uses: fjogeleit/http-request-action@v1
#        with:
#          url: ${{ secrets.API_DOCS_BUILD_WEBHOOK }}
#          method: 'POST'
#
#      - name: Failed Deployment Notification
#        uses: slackapi/slack-github-action@v1.26.0
#        with:
#          payload: |
#            {
#              "text": "*<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Release has failed.>*",
#              "blocks": [
#                {
#                  "type": "section",
#                  "text": {
#                    "type": "mrkdwn",
#                    "text": "*<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Release has failed.>*"
#                  }
#                }
#              ]
#            }
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_ENG_FEED_DEPLOYMENTS }}
#
#  post-release-success:
#    if: ${{ always() && (needs.release-services.result == 'success' && needs.release-embed.result == 'success' && needs.release-web.result == 'success' && needs.release-widget.result == 'success' && needs.release-web-components.result == 'success') }}
#    needs: [
#      release-services,
#      release-embed,
#      release-web,
#      release-widget,
#      release-web-components,
#    ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Deploy API Documentation
#        uses: fjogeleit/http-request-action@v1
#        with:
#          url: ${{ secrets.API_DOCS_BUILD_WEBHOOK }}
#          method: 'POST'
#      - name: Success Deployment Notification
#        uses: slackapi/slack-github-action@v1.26.0
#        with:
#          payload: |
#            {
#              "text": "*<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Release was successful.>*",
#              "blocks": [
#                {
#                  "type": "section",
#                  "text": {
#                    "type": "mrkdwn",
#                    "text": "*<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Release was successful.>*"
#                  }
#                }
#              ]
#            }
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_ENG_FEED_DEPLOYMENTS }}
