name: Release Prod
on:
  workflow_dispatch:
  push:
    branches:
      - prod

jobs:
  pre-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Start Deployment Notification
        uses: ravsamhq/notify-slack-action@v2
        with:
          notification_title: "Release has started"
        env:
          SLACK_WEBHOOK_URL: ${{ inputs.slackWebhookURL }}

  release-api:
    needs: [pre-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/cloud-deploy/cloud-deploy-api.yml

  release-embed:
    needs: [pre-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/cloud-deploy/cloud-deploy-embed.yml

  release-web:
    needs: [pre-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/cloud-deploy/cloud-deploy-web.yml

  release-web-components:
    needs: [pre-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/cloud-deploy/cloud-deploy-web-components.yml

  release-webhook:
    needs: [pre-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/cloud-deploy/cloud-deploy-webhook.yml

  release-widget:
    needs: [pre-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/cloud-deploy/cloud-deploy-widget.yml

  release-worker:
    needs: [pre-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/cloud-deploy/cloud-deploy-worker.yml

  release-ws:
    needs: [pre-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/cloud-deploy/cloud-deploy-ws.yml

  post-release:
    if: ${{ always() }}
    needs: [
      release-api,
      release-embed,
      release-web,
      release-web-components,
      release-webhook,
      release-widget,
      release-worker,
      release-ws
    ]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy API Documentation
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.API_DOCS_BUILD_WEBHOOK }}
          method: 'POST'

      - name: Failed Deployment Notification
        if: ${{ failure() }}   # This step runs only if any of the previous jobs fail.
        uses: ravsamhq/notify-slack-action@v2
        with:
          notification_title: "Release has failed"
        env:
          SLACK_WEBHOOK_URL: ${{ inputs.slackWebhookURL }}


      - name: Success Deployment Notification
        if: ${{ success() }}   # This step runs only if all the previous jobs succeed.
        uses: ravsamhq/notify-slack-action@v2
        with:
          notification_title: "Release was successful"
        env:
          SLACK_WEBHOOK_URL: ${{ inputs.slackWebhookURL }}
