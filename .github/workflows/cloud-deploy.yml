name: Release Prod
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment (prod, dev)'
        required: true
        default: 'dev'
  push:
    branches:
      - prod
      - next

jobs:
  pre-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Start Deployment Notification
        uses: ravsamhq/notify-slack-action@v2
        with:
          notification_title: "Release has started"
        env:
          SLACK_WEBHOOK_URL: ${{ inputs.slackWebhookURL }}

  # Production release
  release-prod-api:
    uses: ./.github/workflows/cloud-deploy-prod-api.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/prod' || github.event.inputs.environment == 'prod'

  release-prod-embed:
    uses: ./.github/workflows/cloud-deploy-prod-embed.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/prod' || github.event.inputs.environment == 'prod'

  release-prod-inbound-mail:
    uses: ./.github/workflows/cloud-deploy-prod-embed.yml
    needs: [ pre-release ]
    if: github.ref == 'refs/heads/prod' || github.event.inputs.environment == 'prod'


  release-prod-web:
    uses: ./.github/workflows/cloud-deploy-prod-web.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/prod' || github.event.inputs.environment == 'prod'

  release-prod-web-components:
    uses: ./.github/workflows/cloud-deploy-prod-web-components.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/prod' || github.event.inputs.environment == 'prod'

  release-prod-webhook:
    uses: ./.github/workflows/cloud-deploy-prod-webhook.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/prod' || github.event.inputs.environment == 'prod'

  release-prod-widget:
    uses: ./.github/workflows/cloud-deploy-prod-widget.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/prod' || github.event.inputs.environment == 'prod'

  release-prod-worker:
    uses: ./.github/workflows/cloud-deploy-prod-worker.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/prod' || github.event.inputs.environment == 'prod'

  release-prod-ws:
    uses: ./.github/workflows/cloud-deploy-prod-ws.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/prod' || github.event.inputs.environment == 'prod'

  # Dev release
  release-dev-api:
    uses: ./.github/workflows/cloud-deploy-dev-api.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/next' || github.event.inputs.environment == 'dev'

  release-dev-embed:
    uses: ./.github/workflows/cloud-deploy-dev-embed.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/next' || github.event.inputs.environment == 'dev'

  release-dev-inbound-mail:
    uses: ./.github/workflows/cloud-deploy-dev-embed.yml
    needs: [ pre-release ]
    if: github.ref == 'refs/heads/next' || github.event.inputs.environment == 'dev'

  release-dev-web:
    uses: ./.github/workflows/cloud-deploy-dev-web.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/next' || github.event.inputs.environment == 'dev'

  release-dev-web-components:
    uses: ./.github/workflows/cloud-deploy-dev-web-components.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/next' || github.event.inputs.environment == 'dev'

  release-dev-webhook:
    uses: ./.github/workflows/cloud-deploy-dev-webhook.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/next' || github.event.inputs.environment == 'dev'

  release-dev-widget:
    uses: ./.github/workflows/cloud-deploy-dev-widget.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/next' || github.event.inputs.environment == 'dev'

  release-dev-worker:
    uses: ./.github/workflows/cloud-deploy-dev-worker.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/next' || github.event.inputs.environment == 'dev'

  release-dev-ws:
    uses: ./.github/workflows/cloud-deploy-dev-ws.yml
    needs: [pre-release]
    if: github.ref == 'refs/heads/next' || github.event.inputs.environment == 'dev'

  post-release:
    if: ${{ always() }}
    needs: [
      release-prod-api,
      release-dev-api,
      release-prod-embed,
      release-dev-embed,
      release-prod-inbound-mail,
      release-dev-inbound-mail,
      release-prod-web,
      release-dev-web,
      release-prod-web-components,
      release-dev-web-components,
      release-prod-webhook,
      release-dev-webhook,
      release-prod-widget,
      release-dev-widget,
      release-prod-worker,
      release-dev-worker,
      release-prod-ws,
      release-dev-ws
    ]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy API Documentation
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.API_DOCS_BUILD_WEBHOOK }}
          method: 'POST'

      - name: Failed Deployment Notification
        if: ${{ failure() }}   # This step runs only if any of the previous jobs fail.
        uses: ravsamhq/notify-slack-action@v2
        with:
          notification_title: "Release has failed"
        env:
          SLACK_WEBHOOK_URL: ${{ inputs.slackWebhookURL }}


      - name: Success Deployment Notification
        if: ${{ success() }}   # This step runs only if all the previous jobs succeed.
        uses: ravsamhq/notify-slack-action@v2
        with:
          notification_title: "Release was successful"
        env:
          SLACK_WEBHOOK_URL: ${{ inputs.slackWebhookURL }}
